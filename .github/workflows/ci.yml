name: build

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        version: ["11", "14", "15", "16"]
    container:
      image: jcxldn/openjdk-alpine:${{matrix.version}}-jdk
    steps:
    - name: Install git
      run: apk add --no-cache git
    - uses: actions/checkout@v2
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build
    - name: Install dependencies for coverage reporter (java 11 only)
      run: apk add -U --no-cache bash curl ca-certificates
      if: matrix.version == '11'
    - name: Upload code coverage (java 11 only)
      uses: codecov/codecov-action@v1
      if: matrix.version == '11'
    - name: Save build artifact
      uses: actions/upload-artifact@v2
      with:
        name: java-${{matrix.version}}
        path: build/libs/*
    - name: Publish to local testing maven repo
      run: ./gradlew publishAllPublicationsToTestingRepository
    - name: Display directory structure of testing repo
      run: ls -R build/testing-mvn-repo
    - name: Save output from testing repo
      uses: actions/upload-artifact@v2
      with:
        name: java-${{matrix.version}}-testing-mvn-repo
        path: build/testing-mvn-repo/*
  linting-check:
    runs-on: ubuntu-latest
    container:
      image: jcxldn/openjdk-alpine:11-jdk
    steps:
    - name: Install git
      run: apk add --no-cache git
    - uses: actions/checkout@v2
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Test our code against our spotless formatting options
      run: ./gradlew spotlessCheck
  javadoc-check:
    runs-on: ubuntu-latest
    container:
      image: jcxldn/openjdk-alpine:11-jdk
    steps:
    - name: Install git
      run: apk add --no-cache git
    - uses: actions/checkout@v2
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build javadocs
      run: ./gradlew javadoc
    - name: Save javadocs
      uses: actions/upload-artifact@v2
      with:
        name: javadocs
        path: build/docs/ # upload entire directory
    - name: Save failed javadocs build output
      if: ${{ failure() }}
      uses: actions/upload-artifact@v2
      with:
        name: failed-javadocs-build-output
        path: build/ # upload entire directory
    - name: Save failed javadocs build options
      if: ${{ failure() }}
      uses: actions/upload-artifact@v2
      with:
        name: failed-javadocs-options-file
        path: build/tmp/javadoc/javadoc.options
